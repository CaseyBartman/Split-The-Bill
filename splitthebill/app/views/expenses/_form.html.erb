<div class = "trips">
  <%= form_with(model: [@trip, expense]) do |form| %>
    <% if expense.errors.any? %>
      <div style="color: red">
        <h2><%= pluralize(expense.errors.count, "error") %> prohibited this expense from being saved:</h2>
        <ul>
          <% expense.errors.each do |error| %>
            <li><%= error.full_message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>

    <!-- Trip Selection (already pre-populated in controller) -->
    <div class = "tripForm">
      <%= form.label :trip_id, "Trip", style: "display: block" %>
      <%= form.text_field :trip_id, value: @trip.name, readonly: true %>
    </div>

    <div class = "tripForm">
      <%= form.label :name, style: "display: block" %>
      <%= form.text_field :name, autocomplete: "off"%>
    </div>

    <div class = "tripForm">
      <%= form.label :expense_type %>
      <%= form.select :expense_type, ["Food", "Gas", "Lodging", "Entertainment"], prompt: "Select a category" %>
    </div>

    <div class = "tripForm">
      <%= form.label :amount, style: "display: block" %>
      <%= form.text_field :amount %>
    </div>

    <!-- Payer Selection-->
    <div class = "tripForm">
      <%= form.label :payer_id, "Who Paid?" %>
      <%= form.collection_select :payer_id, @participants.map(&:user), :id, :name, prompt: "Select a Payer" %>
    </div>

    <div class = "tripForm">
      <%= form.label :date, style: "display: block" %>
      <%= form.date_field :date %>
    </div>

      <!-- Cool trick! Can change the text of the button depending on if we are editing or making a new expense!-->
    <div class = "tripForm">
      <%= form.submit expense.new_record? ? "Create Expense" : "Save Changes", class: "btn btn-primary tripButton" %>
    </div>

    <!-- Hack to fix url generation error with edit -->
    <%= form.hidden_field :trip_id, value: @trip.id %> 
    
  <h4 class  ="tripsHead">Participants' Contributions</h4>

    <!-- For the new expense (create) -->
    <% if @expense.new_record? %>
  <%= form.fields_for :contributions do |contribution_fields| %>
      <div>
        <%= contribution_fields.label :amount, "#{contribution_fields.object.user.name}"%>
        <%= contribution_fields.hidden_field :user_id %>
        <%= contribution_fields.text_field :amount %>
        <%= contribution_fields.check_box :paid %>
      </div>
    <% end %>

    <!-- For the edit (update) view! -->
    <% else %>
    <% already_processed = [] %>
  <div class="contributions">
    <% participants_array = @participants.to_a %> <!-- Store participants in an array -->
    <% index = 0 %> <!-- Initialize the index variable! We need to do it manually since Rails doesn't play nice with nested form edits!-->
    <%= form.fields_for :contributions do |contribution_fields| %>
      
        <div class="contribution-field tripForm">
          <!-- Get the participant object at the current index -->
          <% participant = participants_array[index] %>

          <!-- Hidden Field for User ID -->
          <%= contribution_fields.hidden_field :user_id, value: participant.user.id %>

          <!-- Amount Field. Note, we have to index everything ourselves because otherwise Rails repeats data. Reduces redundancy.-->
          <%= contribution_fields.label :amount, "Contribution for #{participant.user.name}" %>
          <%= contribution_fields.text_field :amount, name: "expense[contributions_attributes][#{index}][amount]" %>

          <!-- Paid Checkbox -->
          <%= contribution_fields.label :paid, "Paid by #{participant.user.name}" %>
          <%= contribution_fields.check_box :paid, name: "expense[contributions_attributes][#{index}][paid]" %>
        </div>

        <% index += 1 %> <!-- Increment the index manually -->
    <% end %>
  </div>

    <% end %>
  <% end %>
</div>